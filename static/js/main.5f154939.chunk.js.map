{"version":3,"sources":["services/api.ts","Pages/Dashboard/styles.ts","Pages/Dashboard/index.tsx","Pages/Repository/styles.ts","assets/logo.svg","Pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","Title","styled","h1","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","props","hasError","css","_templateObject3","shade","Container","div","_templateObject4","Repositories","_templateObject5","Error","span","_templateObject6","Dashboard","_useState","useState","_useState2","_slicedToArray","newRepo","setNewRepo","_useState3","_useState4","inputError","setInputError","_useState5","storageRepository","localStorage","getItem","JSON","parse","_useState6","repositories","setRepositories","useEffect","removeItem","setItem","stringify","handleAddRepository","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","userRepositorys","wrap","_context","prev","next","preventDefault","abrupt","get","concat","sent","data","t0","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","onSubmit","value","placeholder","onChange","e","target","type","map","repository","index","_repository$owner","_repository$owner2","Link","to","full_name","className","alt","owner","login","src","avatar_url","description","FiChevronRight","id","size","Header","header","RepositoryInfo","section","Issues","Repository","setRepository","issues","setIssues","params","useRouteMatch","then","logoImg","FiChevronLeft","stargazers_count","forks_count","open_issues_count","issue","href","html_url","user","title","Routes","Switch","Route","path","exact","component","createGlobalStyle","App","BrowserRouter","GlobalStyle","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f154939.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  // baseURL: \"https://api.github.com/\",\n  baseURL: \"https://api.github.com\",\n});\n\nexport default api;\n","import styled, { css } from \"styled-components\";\n\nimport { shade } from \"polished\";\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 2em;\n  background: linear-gradient(to right, #000000, #555555);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  max-width: 1000px;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const Form = styled.form<FormProps>`\n  font-size: 1em;\n  max-width: 1000px;\n  margin-top: 25px;\n  display: flex;\n  justify-content: center;\n\n  input {\n    flex: 1;\n    max-width: 350px;\n    height: 50px;\n    padding: 0 24px;\n    background-color: #f4f4f4;\n    font-size: 18px;\n    border: 0;\n    border-bottom: 2px solid rgba(0, 0, 0, 0.5);\n\n    ${props => props.hasError && css`\n      border-bottom: 3px solid red;\n    `}\n  }\n\n  button {\n    border: 0;\n    padding: 10px;\n    color: white;\n    font-weight: bold;\n    background-color: #14b43c;\n    border-radius: 5px;\n    margin-left: 10px;\n    box-shadow: 0px 0px 10px rgb(20, 180, 60, 0.5);\n    transition: all 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, \"#14b43c\")};\n      box-shadow: 0px 0px 10px rgb(20, 180, 60, 1);\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  margin-top: 50px;\n\n  &::after {\n    content: \".\";\n    width: 750px;\n    height: 2px;\n    font-size: 1px;\n    background-color: rgba(0, 0, 0, 0.1);\n    display: flex;\n    margin-top: 165px;\n    position: absolute;\n  }\n\n  #arrow {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  max-width: 1000px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n\n  a {\n    background-color: #f4f4f4;\n    border-radius: 5px;\n    width: 100%;\n    padding: 2px;\n    display: flex;\n    justify-content: space-between;\n    text-decoration: none;\n    align-items: center;\n    color: #222;\n    display: flex;\n    align-items: center;\n    transition: all 0.2s;\n\n    &:hover {\n      transform: translate(10px);\n    }\n\n    & + a {\n      margin-top: 10px;\n    }\n\n    img {\n      width: 140px;\n      height: 140px;\n      border-radius: 100%;\n      box-shadow: 0px 0px 10px rgb(0, 0, 0, 0.5);\n    }\n\n    .box {\n      display: flex;\n      align-items: center;\n    }\n\n    .info {\n      margin: 25px 25px;\n\n      strong {\n        font-size: 1em;\n      }\n\n      p {\n        max-width: 500px;\n        font-size: 0.6em;\n        margin-top: 4px;\n      }\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  margin-left: -50px;\n  font-weight: bold;\n  font-size: 0.5em;\n  color: red;\n  text-transform: uppercase;\n`;\n","import React, { useState, useEffect, FormEvent } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport api from \"../../services/api\";\n\nimport { FiChevronRight } from \"react-icons/fi\";\n\nimport { Title, Repositories, Form, Container, Error } from \"./styles\";\n\ninterface Repository {\n  map(arg0: (repository: any) => JSX.Element): any;\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  }\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState(\"\");\n  const [inputError, setInputError] = useState(\"\");\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storageRepository = localStorage.getItem(\"@GithubExplorer:repositories\");\n\n    if (storageRepository) {\n      return JSON.parse(storageRepository);\n    } else {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    localStorage.removeItem(\"@GithubExplorer:repositories\");\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"@GithubExplorer:repositories\",\n      JSON.stringify(repositories)\n    );\n  }, [repositories]);\n\n  const handleAddRepository = async (event: FormEvent<HTMLFormElement>,): Promise<void> => {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError(\"Digite um repositório!\");\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository[]>(`users/${newRepo}/repos`);\n      const userRepositorys = response.data;\n\n      setRepositories(userRepositorys);\n      setNewRepo(\"\");\n      setInputError(\"\");\n    } catch (err) {\n      setInputError(\"Repositório não encontrado ou inexistente.\");\n    }\n  };\n\n  return (\n    <>\n      <Title>Explore repositórios no GitHub</Title>\n\n      <Form\n        hasError={!!inputError}\n        onSubmit={handleAddRepository}\n      >\n        <input\n          value={newRepo}\n          placeholder={\"Usuário\"}\n          onChange={e => setNewRepo(e.target.value)}\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository, index) => (\n          <Container key={index}>\n            <Link key={repository?.full_name} to={`/repository/${repository?.full_name}`}>\n              <div className={\"box\"}>\n                <img\n                  alt={repository?.owner?.login}\n                  src={repository?.owner?.avatar_url}\n                />\n\n                <div className={\"info\"}>\n                  <strong>{repository?.full_name}</strong>\n                  <p>\n                    {repository?.description || \"Sem descrição...\"}\n                  </p>\n                </div>\n              </div>\n\n              <FiChevronRight id=\"arrow\" size={50} />\n            </Link>\n          </Container>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    a {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        text-transform: uppercase;\n        color: #a8a8a3;\n        transition: color 0.2s;\n        font-size: 2vh;\n\n        &:hover {\n            color: #666;\n        }\n\n        svg {\n            margin-right: 0.4vw;\n        }\n    }\n`;\n\nexport const RepositoryInfo = styled.section`\n    margin-top: 10vh;\n\n    header {\n        display: flex;\n        align-items: center;\n\n        img {\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n        }\n\n        div {\n            margin-left: 24px;\n\n            strong {\n                font-size: 36px;\n                color: #3d3d4d;\n            }\n\n            p {\n                font-size: 36px;\n                color: #737380;\n                margin-top: 4px;\n            }\n        }\n    }\n\n    ul {\n        display: flex;\n        list-style: none;\n        margin-top: 40px;\n\n        li {\n            & + li {\n                margin-left: 80px;\n            }\n\n            strong {\n                display: block;\n                font-size: 36px;\n                color: #3d3d4d;\n            }\n\n            span {\n                display: block;\n                margin-top: 4px;\n                font-size: 20px;\n                color: #6c6c80;\n            }\n        }\n    }\n`;\n\nexport const Issues = styled.div`\n    margin-top: 40px;\n\n    a {\n        background-color: #f4f4f4;\n        border-radius: 5px;\n        width: 100%;\n        padding: 2px;\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        justify-content: center;\n        color: #222;\n\n        display: flex;\n        align-items: center;\n\n        transition: all 0.2s;\n\n        &:hover {\n            transform: translate(10px);\n        }\n\n        & + a {\n            margin-top: 10px;\n        }\n\n        img {\n            width: 140px;\n            height: 140px;\n            border-radius: 100%;\n            box-shadow: 0px 0px 10px rgb(0, 0, 0, 0.5);\n        }\n\n        div {\n            margin: 25px 25px;\n            flex: 1;\n\n            strong {\n                font-size: 1em;\n                color: #3d3d4d;\n            }\n\n            p {\n                max-width: 500px;\n                font-size: 0.6em;\n                margin-top: 4px;\n                color: #737380;\n            }\n        }\n\n        svg {\n            margin-left: auto;\n            color: #cbcbd6;\n        }\n    }\n`;","export default __webpack_public_path__ + \"static/media/logo.469cc31b.svg\";","import React, { useState, useEffect } from \"react\";\n\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nimport api from \"../../services/api\";\n\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\n\nimport { Header, RepositoryInfo, Issues } from \"./styles\";\n\nimport logoImg from \"../../assets/logo.svg\";\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repositorio {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repositorio | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      if (response.data) {\n        setRepository(response.data);\n      }\n    });\n\n    api.get(`repos/${params.repository}/issues`).then((response) => {\n      if (response.data) {\n        setIssues(response.data)\n      }\n    });\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"GitHub Explorer\" />\n\n        <Link to=\"/\">\n          <FiChevronLeft size={16} /> Voltar\n        </Link>\n      </Header>\n\n      {repository &&\n        <RepositoryInfo>\n          <Header>\n            <img\n              alt={repository.owner.login}\n              src={repository?.owner.avatar_url}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </Header>\n\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      }\n\n      <Issues>\n        {issues.map((issue) => (\n          <a key={issue.id} href={issue.html_url} target=\"blanck\">\n            <img src={issue.user.avatar_url} alt={issue.user.login} />\n\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n            <FiChevronRight size={50} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Dashboard from \"../Pages/Dashboard\";\nimport Repository from \"../Pages/Repository\";\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/repository/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background-color: #f4f4f4;\n    -webkit-font-smoothing: antialiased;\n    cursor: default;\n  }\n\n  body {\n    font: 2em Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  ::placeholder {\n    font-size: 1.4em;\n    font-weight: bold;\n    color: #858585;\n  }\n`;\n","import React from \"react\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Routes from \"./routes\";\nimport GlobalStyle from \"./styles/global\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}